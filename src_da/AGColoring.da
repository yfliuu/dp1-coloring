import networkx as nx


class P(process):
    def setup(neighbors:list):
        self.responded = set()
        self.color = None
        print(self.neighbors)

    def run():
        send(('Color', self, self.color), to=neighbors)
        await(len(self.responded) == len(self.neighbors))
        output('Received from ' + str(self.neighbors))

    def receive(msg=('Color', id, color), from_=src):
        self.responded.add(src)


def main():
    config(channel="fifo")
    n = 10
    ps = new(P, num=n)

    # id_mapping = {p: id for id, p in enumerate(ps)}
    rev_mapping = {id: p for id, p in enumerate(ps)}

    G = nx.random_geometric_graph(n, 10)
    for id, adj in G.adjacency():
        nbs_id = list(adj.keys())
        nbs_rev = [rev_mapping[i] for i in nbs_id]
        # print(nbs_rev)
        setup({rev_mapping[id]}, (nbs_rev,))
    start(ps)
